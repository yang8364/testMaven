<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:redis="http://www.springframework.org/schema/redis"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/redis http://www.springframework.org/schema/redis/spring-redis.xsd 
       	http://www.springframework.org/schema/context    http://www.springframework.org/schema/context/spring-context-3.0.xsd 
       ">


	<!-- Jedis 连接池配置 -->
	<!-- <context:property-placeholder location="/WEB-INF/classes/redis.properties" /> -->
	<!-- 引入配置文件 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
       <property name="location" value="classpath:redis.properties" />  
       <property name="ignoreUnresolvablePlaceholders" value="true" />    
    </bean>  
	
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.max_idle}" />
		<property name="maxActive" value="${redis.max_total}" />
		<property name="minIdle" value="${redis.min_idle}" />
		<property name="testOnBorrow" value="${redis.test_on_borrow}" />
		<property name="testOnReturn" value="${redis.test_on_return}" />
	</bean>

	<!-- Jedis ConnectionFactory 数据库连接配置，注意id名称必须为redisConnectionFactory -->
	<bean id="redisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="password" value="${redis.password}" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>

	<!--创建redis模板 -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="redisConnectionFactory" />
	</bean>


	<!--序列化 -->
	<bean id="jdkSerializer"
		class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />

	<!--消息监听处理类 -->
	<bean id="messageDelegateListener" class="com.etoak.redis.queue.listener.ListenMessage" />
	
	<bean id="messageListener"
		class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
		<property name="delegate" ref="messageDelegateListener" />
		<property name="serializer" ref="jdkSerializer" />
	</bean>

	<bean id="userInsertListener" class="com.etoak.redis.queue.listener.UserInsertListener" />
	<bean id="userListener"
		class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
		<property name="delegate" ref="userInsertListener" />
		<property name="serializer" ref="jdkSerializer" />
	</bean>
	
	<!--消息监听 -->
	<redis:listener-container>
		<!--指定消息处理方法，序列化方式及主题名称 -->
		<redis:listener ref="messageListener" method="handleMessage" serializer="jdkSerializer" topic="java" />
		<redis:listener ref="userListener" method="handleMessage" serializer="jdkSerializer" topic="userInsert" />
		
		
	</redis:listener-container>
</beans>